/*
*
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define FN1 1
#define FN2 2
#define FN3 3

#define LT1ESC &lt FN1 ESC
#define LT1RET &lt FN1 RET
#define LT2SPC &lt FN2 SPACE
#define LT3BKSP &lt FN3 BSPC
#define BTCLR &bt BT_CLR
#define BTSEL0 &bt BT_SEL 0 
#define BTSEL1 &bt BT_SEL 1 
#define BTSEL2 &bt BT_SEL 2 
#define BTSEL3 &bt BT_SEL 3 
#define BTSEL4 &bt BT_SEL 4 
/ {
        keymap {
                compatible = "zmk,keymap";

                _base {

// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | 1esc| 3bks|   | 1ent | 2spc  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y  &kp U   &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H  &kp J   &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N  &kp M   &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                &kp LGUI  LT1ESC  LT3BKSP    LT1RET LT2SPC &kp RALT
                        >;
                };
                _fn1 {

// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   | HOME| PDN |  PUP| END |     |      |
//                    | GUI |     | BKSP|   | RET | SPC | ALT |
                        bindings = <
   &kp TAB   &kp N1  &kp N2 &kp N3 &kp N4 &kp N5    &kp N6   &kp N7    &kp N8    &kp N9    &kp N0 &kp BSPC
   &kp LCTRL &trans  &trans &trans &trans &trans    &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans
   &kp LSHFT &trans  &trans &trans &trans &trans    &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans &trans
                  &kp LGUI    &kp ESC     &kp BSPC    &kp RET    &kp SPACE    &kp RALT
                        >;
                };

                _fn2 {

// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  `  |  {  |  }  |  \   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  ~  |  [  |  ]  | "|"  | // TODO: Fix this row when &mkp is committed
//                    | GUI |     | BKSP|   | RET | SPC | ALT |
                        bindings = <
   &kp ESC   &kp EXCL &kp AT  &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp STAR  &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans  &trans   &trans    &trans      &kp MINUS &kp EQUAL &kp GRAVE &kp LBRC &kp RBRC &kp BSLH
   &kp LSHFT &trans   &trans  &trans   &trans    &trans      &kp UNDER &kp PLUS  &kp TILDE &kp LBKT &kp RBKT &kp PIPE
                      &kp LGUI      &kp ESC      &kp BSPC    &kp RET &kp SPACE &kp RALT
                        >;
                };

                _fn3 {

// -----------------------------------------------------------------------------------------
// | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   |     |  7  |  8  |  9  |  -  | BKSP |
// | CTRL | rst |     |     |     |     |   |     |  4  |  5  |  6  |  +  |  *   |
// | SHFT |     |     |     |     |     |   |     |  1  |  2  |  3  | ENT |  /   | // TODO: Fix this row when &mkp is committed
//                    | GUI |     | BKSP|   | RET |  0  |  .  |
                        bindings = <
   BTCLR     BTSEL0   BTSEL1  BTSEL2   BTSEL3    BTSEL4      &trans &kp KP_N7 &kp KP_N8  &kp KP_N9 &kp KP_MINUS &kp BSPC
   &kp LCTRL &reset   &trans  &trans   &trans    &trans      &trans &kp KP_N4 &kp KP_N5  &kp KP_N6 &kp KP_PLUS  &kp KP_MULTIPLY
   &kp LSHFT &trans   &trans  &trans   &trans    &trans      &trans &kp KP_N1 &kp KP_N2  &kp KP_N3 &kp KP_ENTER &kp KP_SLASH
                      &kp LGUI     &kp ESC     &kp BSPC      &kp RET   &kp KP_N0   &kp KP_DOT
                        >;
                };
        };
};
